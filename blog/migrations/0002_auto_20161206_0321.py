# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-12-05 18:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_comment', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Gamesetinfo',
            fields=[
                ('gameset', models.IntegerField(primary_key=True, serialize=False)),
                ('game_type', models.IntegerField()),
                ('rule_size', models.IntegerField()),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'gamesetInfo',
            },
        ),
        migrations.CreateModel(
            name='Gamesetproblem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_num', models.IntegerField()),
                ('problem', models.IntegerField()),
                ('language', models.TextField()),
                ('gameset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Gamesetinfo')),
            ],
            options={
                'db_table': 'gamesetProblem',
            },
        ),
        migrations.CreateModel(
            name='Leaguetable',
            fields=[
                ('position', models.IntegerField(primary_key=True, serialize=False)),
                ('league', models.TextField()),
                ('clubkor', models.TextField(db_column='clubKor')),
                ('clubeng', models.TextField(db_column='clubEng')),
                ('played', models.IntegerField()),
                ('win', models.IntegerField()),
                ('draw', models.IntegerField()),
                ('lose', models.IntegerField()),
                ('gf', models.IntegerField()),
                ('ga', models.IntegerField()),
                ('gd', models.IntegerField()),
                ('points', models.IntegerField()),
            ],
            options={
                'db_table': 'leagueTable',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Solvedproblem',
            fields=[
                ('handle', models.TextField(primary_key=True, serialize=False)),
                ('problem', models.TextField()),
                ('last_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('language', models.TextField()),
            ],
            options={
                'db_table': 'solvedProblem',
            },
        ),
        migrations.AlterUniqueTogether(
            name='solvedproblem',
            unique_together=set([('handle', 'problem')]),
        ),
        migrations.AlterUniqueTogether(
            name='leaguetable',
            unique_together=set([('position', 'league')]),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.Post'),
        ),
        migrations.AlterUniqueTogether(
            name='gamesetproblem',
            unique_together=set([('gameset', 'rule_num')]),
        ),
    ]
